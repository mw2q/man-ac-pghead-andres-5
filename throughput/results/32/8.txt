BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'FRANCE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL BRUSHED COPPER'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1761347.64..1761349.47 rows=732 width=38) (actual time=10457.816..10457.816 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1783466 read=219503 dirtied=361 written=10
   ->  HashAggregate  (cost=1761300.00..1761312.81 rows=732 width=38) (actual time=10457.741..10457.741 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1783463 read=219503 dirtied=361 written=10
         ->  Hash Join  (cost=39455.52..1760802.18 rows=24891 width=38) (actual time=1147.971..10414.879 rows=24422 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1783463 read=219503 dirtied=361 written=10
               ->  Nested Loop  (cost=39453.96..1760333.91 rows=24891 width=16) (actual time=1147.882..10376.992 rows=24422 loops=1)
                     Buffers: shared hit=1783459 read=219503 dirtied=361 written=10
                     ->  Hash Join  (cost=39453.67..1752302.49 rows=24891 width=16) (actual time=1147.846..10168.906 rows=24422 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1710065 read=219503 dirtied=361 written=10
                           ->  Nested Loop  (cost=422.98..1712556.19 rows=124455 width=20) (actual time=10.375..8938.886 rows=121316 loops=1)
                                 Buffers: shared hit=1564721 read=218671 dirtied=361 written=10
                                 ->  Nested Loop  (cost=422.55..1512138.07 rows=409320 width=16) (actual time=10.287..4206.406 rows=398490 loops=1)
                                       Buffers: shared hit=271709 read=193507 dirtied=361 written=10
                                       ->  Bitmap Heap Scan on part  (cost=421.98..28469.90 rows=13620 width=4) (actual time=10.190..165.443 rows=13250 loops=1)
                                             Recheck Cond: ((p_type)::text = 'SMALL BRUSHED COPPER'::text)
                                             Heap Blocks: exact=11307
                                             Buffers: shared hit=2349 read=9040 written=2
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.58 rows=13620 width=0) (actual time=7.154..7.154 rows=13250 loops=1)
                                                   Index Cond: ((p_type)::text = 'SMALL BRUSHED COPPER'::text)
                                                   Buffers: shared read=82
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.56..108.62 rows=31 width=20) (actual time=0.029..0.293 rows=30 loops=13250)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=269360 read=184467 dirtied=361 written=8
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=398490)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1293012 read=25164
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=1132.997..1132.997 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=145344 read=832
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=31.788..972.382 rows=300963 loops=1)
                                       Buffers: shared hit=145344 read=832
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.086..0.121 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.010..0.018 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=28.712..174.453 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145336
                                             Buffers: shared hit=145342 read=832
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=19.226..19.226 rows=60193 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=7 read=831
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=24422)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73394
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.031..0.031 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.014 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 11.399 ms
 Execution time: 10458.687 ms
(66 rows)

COMMIT;
COMMIT
