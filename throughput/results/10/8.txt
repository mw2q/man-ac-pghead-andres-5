BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'GERMANY' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'ECONOMY PLATED COPPER'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1732010.33..1732012.16 rows=732 width=38) (actual time=10272.803..10272.803 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1705807 read=296993 dirtied=1472 written=154
   ->  HashAggregate  (cost=1731962.69..1731975.50 rows=732 width=38) (actual time=10272.734..10272.736 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1705804 read=296993 dirtied=1472 written=154
         ->  Hash Join  (cost=39445.10..1731470.97 rows=24586 width=38) (actual time=1201.138..10232.728 rows=24474 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1705804 read=296993 dirtied=1472 written=154
               ->  Nested Loop  (cost=39443.53..1731008.42 rows=24586 width=16) (actual time=1201.070..10196.781 rows=24474 loops=1)
                     Buffers: shared hit=1705800 read=296993 dirtied=1472 written=154
                     ->  Hash Join  (cost=39443.24..1723075.47 rows=24586 width=16) (actual time=1201.048..10009.396 rows=24474 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1632248 read=296993 dirtied=1472 written=154
                           ->  Nested Loop  (cost=412.56..1683337.93 rows=122930 width=20) (actual time=7.980..8733.417 rows=121371 loops=1)
                                 Buffers: shared hit=1522165 read=260900 dirtied=1472 written=105
                                 ->  Nested Loop  (cost=412.12..1485364.29 rows=404303 width=16) (actual time=7.861..4351.963 rows=397899 loops=1)
                                       Buffers: shared hit=261388 read=205215 dirtied=1443 written=75
                                       ->  Bitmap Heap Scan on part  (cost=411.56..28088.03 rows=13307 width=4) (actual time=7.778..175.370 rows=13246 loops=1)
                                             Recheck Cond: ((p_type)::text = 'ECONOMY PLATED COPPER'::text)
                                             Heap Blocks: exact=11381
                                             Buffers: shared hit=1537 read=9927 written=7
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.23 rows=13307 width=0) (actual time=5.370..5.370 rows=13246 loops=1)
                                                   Index Cond: ((p_type)::text = 'ECONOMY PLATED COPPER'::text)
                                                   Buffers: shared read=83
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.56..109.20 rows=31 width=20) (actual time=0.028..0.305 rows=30 loops=13246)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=259851 read=195288 dirtied=1443 written=68
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=397899)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1260777 read=55685 dirtied=29 written=30
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=1189.402..1189.402 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=110083 read=36093 written=49
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=24.012..1092.060 rows=300963 loops=1)
                                       Buffers: shared hit=110083 read=36093 written=49
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.063..0.094 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.016 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=19.959..206.806 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145336
                                             Buffers: shared hit=110081 read=36093 written=49
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=13.167..13.167 rows=60193 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6 read=832
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=24474)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73552
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.009 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 8.495 ms
 Execution time: 10273.720 ms
(66 rows)

COMMIT;
COMMIT
